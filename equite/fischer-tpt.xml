<?xml version="1.0" encoding="utf-8"?><!DOCTYPE nta PUBLIC '-//Uppaal Team//DTD Flat System 1.1//EN' 'http://www.it.uu.se/research/group/darts/uppaal/flat-1_1.dtd'><nta><declaration>// Place global declarations here.
typedef int[1,2] myID;

int has_cs = 0;
const int c = 3;//4; 
const int CS = 30;
const int delay = 3;
</declaration><template><name x="5" y="5">Process</name><parameter>const myID ID</parameter><declaration>// Place local declarations here.
clock sleeptime;// to model the sleep time
clock exec;// to model constraints on execution times</declaration><location id="id0" x="-400" y="296"><name x="-480" y="296">waiting2</name></location><location id="id1" x="224" y="16"><name x="240" y="8">waiting</name><label kind="invariant" x="214" y="31">exec &lt; 3*c + delay</label></location><location id="id2" x="-240" y="-112"><name x="-304" y="-136">L3goto</name><label kind="invariant" x="-312" y="-104">exec &lt; c</label></location><location id="id3" x="-40" y="296"><name x="-16" y="288">L5</name></location><location id="id4" x="-40" y="168"><name x="-112" y="152">L4toLk</name><label kind="invariant" x="-128" y="168">exec &lt; CS</label></location><location id="id5" x="-40" y="16"><name x="-24" y="24">L3</name></location><location id="id6" x="224" y="-128"><name x="248" y="-160">L2</name><label kind="invariant" x="240" y="-136">exec &lt; c</label></location><location id="id7" x="-32" y="-128"><name x="-72" y="-136">L1</name><label kind="invariant" x="-48" y="-112">exec &lt; c</label></location><location id="id8" x="224" y="-272"><name x="248" y="-288">L0goto</name><label kind="invariant" x="208" y="-256">exec &lt; c</label></location><location id="id9" x="-32" y="-272"><name x="-56" y="-312">L0</name><label kind="invariant" x="-56" y="-264">exec &lt; c</label></location><init ref="id9"/><transition><source ref="id0"/><target ref="id9"/><label kind="guard" x="-544" y="-56">sleeptime &gt;= 2*delay</label><label kind="assignment" x="-480" y="-40">exec := 0</label><nail x="-400" y="-368"/><nail x="-104" y="-368"/></transition><transition><source ref="id3"/><target ref="id0"/><label kind="assignment" x="-280" y="296">sleeptime := 0</label></transition><transition><source ref="id4"/><target ref="id3"/><label kind="assignment" x="-32" y="240">has_cs = 0</label></transition><transition><source ref="id5"/><target ref="id4"/><label kind="guard" x="-32" y="72">has_cs == ID</label><label kind="assignment" x="-32" y="88">exec := 0</label></transition><transition><source ref="id2"/><target ref="id9"/><nail x="-240" y="-272"/></transition><transition><source ref="id5"/><target ref="id2"/><label kind="guard" x="-176" y="32">has_cs != ID</label><label kind="assignment" x="-168" y="-8">exec := 0</label><nail x="-240" y="16"/></transition><transition><source ref="id1"/><target ref="id5"/><label kind="guard" x="24" y="-8">sleeptime &gt;= delay</label></transition><transition><source ref="id6"/><target ref="id1"/><label kind="assignment" x="232" y="-80">sleeptime := 0</label></transition><transition><source ref="id7"/><target ref="id6"/><label kind="assignment" x="48" y="-152">has_cs = ID</label></transition><transition><source ref="id9"/><target ref="id7"/><label kind="guard" x="-24" y="-224">has_cs == 0</label><label kind="assignment" x="-24" y="-208">exec := 0</label><nail x="-32" y="-256"/></transition><transition><source ref="id8"/><target ref="id9"/><label kind="assignment" x="72" y="-400">exec := 0</label><nail x="224" y="-376"/><nail x="-32" y="-376"/></transition><transition><source ref="id9"/><target ref="id8"/><label kind="guard" x="48" y="-296">has_cs != 0</label><label kind="assignment" x="64" y="-272">exec := 0</label></transition></template><system>// This command is special it instanciate any 
// possible instance of Process with distinct parameters.
// As myID is in {1,2} there will be two instances. 
system Process;</system></nta>